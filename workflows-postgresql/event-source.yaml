# This YAML file defines an EventSource and Sensor for a webhook that listens to POST requests on port 12000 and triggers an Argo Workflow.
# The EventSource listens to the /example endpoint and only accepts POST requests.
# The Sensor depends on the EventSource and triggers an Argo Workflow when it receives an event from the EventSource.
# The triggered Argo Workflow uses the fill-postgres workflow template and passes a message parameter from the event body as an argument.
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: webhook
spec:
  service:
    ports:
      - port: 12000
        targetPort: 12000
  webhook:
    # event-source can run multiple HTTP servers. Simply define a unique port to start a new HTTP server
    example:
      # port to run HTTP server on
      port: "12000"
      # endpoint to listen to
      endpoint: /example
      # HTTP request method to allow. In this case, only POST requests are accepted
      method: POST
---
# This YAML file defines a Sensor resource named "webhook" that listens for an event named "example" from an event source also named "webhook".
# When the event is received, it triggers an Argo Workflow named "fill-postgres" with a generated name "event-fill-postgres-" and passes a parameter named "message" with the value of the "body.message" field from the received event.
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
spec:
  template:
    serviceAccountName: app-sa
  dependencies:
    - name: test-dep
      eventSourceName: webhook
      eventName: example
  triggers:
    - template:
        name: argo-workflow-trigger
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: event-fill-postgres-
              spec:
                arguments:
                  parameters:
                  - name: message
                workflowTemplateRef:
                  name: fill-postgres
          parameters:
            - src:
                dependencyName: test-dep
                dataKey: body.message
              dest: spec.arguments.parameters.0.value